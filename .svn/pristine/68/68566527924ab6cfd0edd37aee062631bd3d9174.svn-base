package kr.or.ddit.yguniv.absencecertificatereceipt.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;

import kr.or.ddit.yguniv.absencecertificatereceipt.service.AbsenceCertificateReceiptServiceImpl;
import kr.or.ddit.yguniv.attendance.service.AttendanceServiceImpl;
import kr.or.ddit.yguniv.commons.exception.PKNotFoundException;
import kr.or.ddit.yguniv.lecture.service.LectureMaterialsServiceImpl;
import kr.or.ddit.yguniv.vo.AbsenceCertificateReceiptVO;
import kr.or.ddit.yguniv.vo.AttendanceVO;
import kr.or.ddit.yguniv.vo.LectureVO;

@Controller
@RequestMapping("/lecture/{lectNo}/absence")
public class AbsenceCertificateReceiptConstroller {
	
	@Autowired // 공결인정서
	private AbsenceCertificateReceiptServiceImpl absenceService;
	@Autowired // 출결조회
	private AttendanceServiceImpl attendanceService;
	@Autowired // 강의정보
	private LectureMaterialsServiceImpl lectureService;
	
	
	@ModelAttribute
	public void addLecture(@PathVariable String lectNo, Model model) {
		LectureVO lectureVO = lectureService.selectLecture(lectNo);
		if (lectureVO == null) {
			throw new PKNotFoundException("해당 강의는 존재하지 않습니다", true);
		}
		model.addAttribute("lecture", lectureVO);
	}
	
	// 공결 인증서 접수 전체조회
	@GetMapping
	public String selectAbsenceCertificateReceipt(
			@PathVariable("lectNo") String lectNo,
			Authentication id, Model model) {
		
		List<AbsenceCertificateReceiptVO> selectAbsenceCertificateReceiptList 
		= absenceService.selectAbsenceCertificateReceiptList(lectNo);
		List<AttendanceVO> selectAttendanceList = attendanceService.selectAttendanceList();
		
		model.addAttribute("selectAbsenceCertificateReceiptList", selectAbsenceCertificateReceiptList);
		model.addAttribute("selectAttendanceList", selectAttendanceList);
		
		return "lecture/materials/absenceCertificateReceipt/absenceCertificateReceiptList";
	}
	
	// 공결 인증서 접수 상세조회
	@GetMapping("{absenceCd}")
	public String selectAbsenceCertificateReceiptDetail(@PathVariable()String stuId) {
		return "lecture/materials/absenceCertificateReceipt/absenceCertificateReceiptDetail";
	}
	
	// 공결 인증서 접수 등록
	@PostMapping("absence/")
	public String insertAbsenceCertificateReceipt() {
		return "absenceCertificateReceipt/AbsenceCertificateReceiptForm";
	}
	
	// 공결인증서 와 출결 정보 수정
	@PostMapping("/edit")
	public ResponseEntity<Object> updateAbsenceCertificateReceipt(
	    @PathVariable("lectNo") String lectNo
	    , @RequestBody AbsenceCertificateReceiptVO absenceVO) {

		
		// 승인 여부에 따라 처리 로직 분기
	    boolean isUpdated;
	    
	    if (absenceVO.getAttendanceVO() != null) { // 승인된 경우
	        // 공결인정서 상태와 출결 정보를 동시에 수정
	    	System.out.println("서비스 수정 실행하기");
	    	isUpdated = absenceService.updateAbsenceAndAttendance(absenceVO);
	    	System.out.println("서비스 수정 끝남");
	    } else { // 반려된 경우
	        // 공결인정서 상태만 수정
	    	System.out.println("공결 인정서만 서비스 수행");
	        isUpdated = absenceService.updateAbsenceCertificateReceipt(absenceVO);
	    }
	    
	    // 처리 결과에 따라 응답 반환
	    if (!isUpdated) {
	        return ResponseEntity.status(HttpStatus.BAD_REQUEST)
	                .body("공결 인증서 접수 및 출결 정보 수정 실패~~~");
	    }

	    // 수정이 성공한 경우
	    return ResponseEntity.ok().body("공결 인증서 접수 및 출결 정보 수정 성공!!!");
	}

	
	
	
}
