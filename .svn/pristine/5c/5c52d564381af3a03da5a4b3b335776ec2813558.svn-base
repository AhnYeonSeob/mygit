package kr.or.ddit.yguniv.jobboard.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.yguniv.jobboard.service.JobBoardService;
import kr.or.ddit.yguniv.noticeboard.exception.BoardException;
import kr.or.ddit.yguniv.paging.PaginationInfo;
import kr.or.ddit.yguniv.paging.SimpleCondition;
import kr.or.ddit.yguniv.paging.renderer.BootStrapPaginationRenderer;
import kr.or.ddit.yguniv.paging.renderer.PaginationRenderer;
import kr.or.ddit.yguniv.vo.JobBoardVO;

@RequestMapping("/jobboard")
@Controller
public class JobBoardController {
	public static final String MODELNAME ="jobboard";
	
	@Autowired
	private JobBoardService service;
	
	@ModelAttribute(MODELNAME)
	public JobBoardVO board() {
		return new JobBoardVO();
	}
	
	//form으로 보냄
	@GetMapping("new")
	public String createForm(Model model) {
		return "jobBoard/jobBoardForm";
	}
	
	
	//게시글전체조회(검색어 있는지 없는지 ntcNm 제목 / ntcDesc 내용)
	@GetMapping
	public String selectlist(
		@RequestParam(required = false, defaultValue = "1") int page
		, @ModelAttribute("condition") SimpleCondition simpleCondition
		, Model model
			) {
			PaginationInfo<JobBoardVO>paging = new PaginationInfo<>();
			paging.setCurrentPage(page);
			paging.setSimpleCondition(simpleCondition);
			model.addAttribute("list",service.selectJobBoardListPaging(paging));
			PaginationRenderer renderer = new BootStrapPaginationRenderer();
			
			model.addAttribute("pagingHTML", renderer.renderPagination(paging, "fnPaging"));
		
		return "jobBoard/jobBoardList";
	}
	
	//게시글 생성
	@PostMapping()
	public String create(
			@ModelAttribute(MODELNAME) JobBoardVO board
			, BindingResult errors
			, RedirectAttributes redirectAttributes
			) {
		try {
			String lvn = null;
			if (!errors.hasErrors()) {
				service.insertJobBoard(board);
				lvn = "redirect:/jobboard/" + board.getJobNo();
			} else {
				redirectAttributes.addFlashAttribute(MODELNAME, board);
				redirectAttributes.addFlashAttribute(BindingResult.MODEL_KEY_PREFIX + MODELNAME, errors);
				lvn = "redirect:/jobboard/new";
			}
			return lvn;
		}catch (Throwable e) {
			throw new BoardException(e);
		}
	}
	
	
	
	//게시글상세조회
	@GetMapping("{jobNo}")
	public String select(@PathVariable("jobNo")String jobNo, Model model) {
		JobBoardVO board = service.selectJobBoard(jobNo);
		model.addAttribute("jobboard", board);
		
		return "jobBoard/jobBoardDetail";
	}
	
	//게시글수정
	@PutMapping("{jobNo}")
	public String update(@PathVariable()String jobNo) {
		return "jobBoard/jobboardDetail";
	}
	
	//게시글삭제
	@DeleteMapping("{jobNo}")
	public String delete(@PathVariable()String jobNo) {
		return "jobBoard/jobboardList";
	}
		
	
}

