package kr.or.ddit.yguniv.jobtest.controller;

import java.security.Principal;
import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.yguniv.jobtest.service.JobTestService;
import kr.or.ddit.yguniv.vo.JobTestResultVO;
import kr.or.ddit.yguniv.vo.JobTestVO;

@Controller
@RequestMapping("/jobtest")
public class JobTestController {
	public static final String MODELNAME ="jobtest";
	
	@Autowired
	private JobTestService service;
	
	@ModelAttribute(MODELNAME)
	public JobTestVO jobtest() {
		return new JobTestVO();
	}

	// form으로 보냄
	@GetMapping("new")
	public String createForm() {
		return "jobTest/jobTestForm";
	}

	// 시험메인화면
	@GetMapping
	public String main(Model model, Principal principal) {
		model.addAttribute("principal",principal.getName());
		model.addAttribute("list", service.selectjobTestList());
		return "jobTest/jobTestMain";
	}
	

	@GetMapping("checkToday/{stuId}")
	public ResponseEntity<Map<String, String>> checkTestToday(@PathVariable String stuId) {
	    boolean isDuplicate = service.checkTestToday(stuId);
	    
	    Map<String, String> response = new HashMap<>();
	    if (isDuplicate) {
	        response.put("status", "denied"); // 중복 응시
	        response.put("message", "오늘 이미 검사를 완료하셨습니다.");
	    } else {
	        response.put("status", "allowed"); // 검사 가능
	        response.put("message", "검사를 진행할 수 있습니다.");
	    }
	    return ResponseEntity.ok(response);
	}

	// 응시 결과 조회
	@GetMapping("result")
	public String result(Model model,Principal principal, @PathVariable() String stuId) {
		String lvn ="";
		model.addAttribute("principal", principal.getName());
		model.addAttribute("result", service.selectjobTestResult(stuId));
		lvn= "/jobTestResult/jobTestResultForm";
		return lvn;
	}
	
	
	// 시험문제 전체 조회
	@GetMapping("list")
	public String selectlist(Model model, Principal principal) {
		String lvn="";
		model.addAttribute("principal",principal.getName());
		model.addAttribute("list",service.selectjobTestList());
		lvn= "/jobTest/jobTestList";
		return lvn;
	}
	
	//학생 검사 응시
	@PostMapping("submit")
	public ResponseEntity<Map<String, String>> submitTest(@RequestBody Map<String, Object> payload) {
	    JobTestResultVO jobTestResult = new JobTestResultVO();
	    
	    jobTestResult.setStuId((String) payload.get("stuId"));

	    Map<String, Integer> scores = (Map<String, Integer>) payload.get("scores");
	    jobTestResult.setJtrRea(scores.getOrDefault("진취형", 0));
	    jobTestResult.setJtrInq(scores.getOrDefault("탐구형", 0));
	    jobTestResult.setJtrArt(scores.getOrDefault("예술형", 0));
	    jobTestResult.setJtrSoc(scores.getOrDefault("사회형", 0));
	    jobTestResult.setJtrEnt(scores.getOrDefault("현장형", 0));
	    jobTestResult.setJtrCon(scores.getOrDefault("관습형", 0));
	    
	    Map<String, String> response = new HashMap<>();
	    response.put("status", "success");
	    response.put("message", "응시가 성공적으로 완료되었습니다.");

	    service.saveOrUpdateJobTestResult(jobTestResult);
	    

	    return ResponseEntity.ok(response);
	    
	}


	// 상세조회
	@GetMapping("{jobTestId}")
	public String select(@PathVariable() String personId) {

		return "jobTest/jobTestDetail";
	}

	// 수정
	@PutMapping("{jobTestId}")
	public String update(@PathVariable() String personId) {
		return "jobTest/jobTestDetail";
	}

	// 삭제
	@DeleteMapping("{jobTestId}")
	public String delete(@PathVariable() String personId) {
		return "jobTest/jobTestList";
	}
}

