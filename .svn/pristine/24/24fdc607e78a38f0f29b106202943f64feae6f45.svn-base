package kr.or.ddit.yguniv.student.controller;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.yguniv.commons.service.CommonCodeServiceImpl;
import kr.or.ddit.yguniv.paging.PaginationInfo;
import kr.or.ddit.yguniv.paging.SimpleCondition;
import kr.or.ddit.yguniv.paging.renderer.BootStrapPaginationRenderer;
import kr.or.ddit.yguniv.paging.renderer.PaginationRenderer;
import kr.or.ddit.yguniv.student.service.StudentRecordsServiceImpl;
import kr.or.ddit.yguniv.vo.LectureInquiryBoardVO;
import kr.or.ddit.yguniv.vo.StudentRecordsVO;

@Controller
@RequestMapping("/student")
public class StudentRecordsController {
	@Autowired
	StudentRecordsServiceImpl srService;
	
	@Autowired
	CommonCodeServiceImpl cocoService;
	
	@GetMapping("studentRecords")
	public String selectStudentRecordsList(
		Authentication authentication
		, @RequestParam(required = false, defaultValue = "1") int page
		, @ModelAttribute("condition") StudentRecordsVO detailCondition
		, Model model
	) {
		PaginationInfo<StudentRecordsVO> paging = new PaginationInfo<>();
		detailCondition.setId(authentication.getName());
		detailCondition.setRole(authentication.getAuthorities().stream()
				.map(GrantedAuthority::getAuthority)
				.filter(a->StringUtils.containsAny(a, "ROLE_STUDENT", "ROLE_PROFESSOR"))
				.findFirst().orElse(null));
		paging.setCurrentPage(page);
		paging.setDetailCondition(detailCondition);
		model.addAttribute("stuRecList", srService.selectStudentRecordsList(paging));
		model.addAttribute("departmentList", cocoService.getDepartmentList());
		model.addAttribute("semesterList", cocoService.getSemesterList(null));
		model.addAttribute("streCateCodeList", cocoService.getCodeList("STU_REC"));
		model.addAttribute("streStatusCodeList", cocoService.getCodeList("ST01"));
		PaginationRenderer renderer = new BootStrapPaginationRenderer();
		model.addAttribute("pagingHTML", renderer.renderPagination(paging, "fnPaging"));
		
		return "student/studentRecordsList";
	}
	
	@ResponseBody
	@GetMapping("studentRecords/{streIssuNo}")
	public StudentRecordsVO selectStudentRecords(StudentRecordsVO studentRecordsVO) {
		return srService.selectStudentRecords(studentRecordsVO);
	}
	
	@PostMapping("academicProbation/{stuId}")
	public void createAcademicProbation(@PathVariable String stuId) {
		
	}
	
	@GetMapping("studentRecords/new")
	public void studentRecordForm() {
		
	}
	
	@PostMapping("studentRecords/new")
	public void createStudentRecords() {
		
	}
	
	
	@PutMapping("studentRecords/{docIssuCd}/consent")
	public void consentStudentRecords(@PathVariable String docIssuCd) {
		
	}
	
	
	@PutMapping("studentRecords/{docIssuCd}/return")
	public void returnStudentRecords(@PathVariable String docIssuCd) {
		
	} 
}