  /**
 * 
 */// 전송을 누르면 데이터를 전송하고 컨트롤러는 값을 등록하고 시험 페이지는 닫혀야함. 씨ㅏ
document.addEventListener("DOMContentLoaded", () => {
    const form = document.querySelector("#newQuestion");

    // 제출 이벤트 처리
    form.addEventListener("submit", (e) => {
        e.preventDefault(); // 기본 제출 동작 방지

        // 답안 입력 확인 및 미입력 문제로 이동
        const unansweredQuestion = checkAllQuestionsAnswered();
        if (unansweredQuestion) {
            swal("미입력 답안", `${unansweredQuestion}번 문제의 답안을 입력해주세요.`, "warning")
                .then(() => {
                    scrollToQuestion(`question-${unansweredQuestion}`);
                });
            return;
        }

        // FormData 객체로 데이터 수집
        const formData = new FormData(form);

        // JSON 데이터 배열 생성
        const jsonData = [];
        formData.forEach((value, key) => {
            jsonData.push({
                queNo: key,
                queAnswer: value
            });
        });

        console.log("JSON Data:", jsonData);

        // JSON 데이터 전송
        fetch(form.action, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(jsonData),
        })
            .then((response) => response.json())
            .then((data) => {
                console.log("Response:", data);
                if (data.result == "ok") {
                    window.close();
                } else {
                    swal("실패", "제출이 실패했습니다.", "error");
                }
            })
            .catch((error) => {
                console.error("Error:", error);
                swal("오류", "서버와의 통신 중 문제가 발생했습니다.", "error");
            });
    });
});

function showTestConfirm() {
    const form = document.querySelector("#newQuestion");

    // SweetAlert confirm 창 띄우기
    swal({
        title: "제출하시겠습니까?",
        text: "제출 시 수정 및 재시험이 불가능합니다.",
        icon: "warning",
        buttons: ["취소", "제출"],
        dangerMode: true,
    }).then((isConfirm) => {
        if (isConfirm) {
            // 확인 버튼 클릭 시 폼 제출
            form.dispatchEvent(new Event("submit"));
        } else {
            // 취소 버튼 클릭 시
            swal("취소되었습니다!", "제출이 취소되었습니다.", "error");
        }
    });
}

function checkAllQuestionsAnswered() {
    const questions = document.querySelectorAll('[id^="question-"]');
    for (let i = 0; i < questions.length; i++) {
        const question = questions[i];
        const questionNumber = i + 1; // 1부터 시작하는 문제 번호
        const inputs = question.querySelectorAll('input[type="radio"], input[type="text"], textarea');
        
        let answered = false;
        for (let input of inputs) {
            if (input.type === 'radio' && input.checked) {
                answered = true;
                break;
            } else if ((input.type === 'text' || input.tagName === 'TEXTAREA') && input.value.trim() !== '') {
                answered = true;
                break;
            }
        }
        
        if (!answered) {
            return questionNumber;
        }
    }
    return null;
}

function scrollToQuestion(questionId) {
    document.getElementById(questionId).scrollIntoView({ behavior: 'smooth' });
}


