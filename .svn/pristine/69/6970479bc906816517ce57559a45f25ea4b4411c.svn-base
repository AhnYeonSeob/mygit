package kr.or.ddit.yguniv.askAward.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.yguniv.askAward.dao.AskAwardMapper;
import kr.or.ddit.yguniv.askAward.service.AskAwardService;
import kr.or.ddit.yguniv.award.dao.AwardMapper;
import kr.or.ddit.yguniv.paging.PaginationInfo;
import kr.or.ddit.yguniv.paging.SimpleCondition;
import kr.or.ddit.yguniv.paging.renderer.BootStrapPaginationRenderer;
import kr.or.ddit.yguniv.paging.renderer.PaginationRenderer;
import kr.or.ddit.yguniv.vo.AwardAskVO;
import kr.or.ddit.yguniv.vo.AwardVO;

@Controller
@RequestMapping("/askAward")
public class AskAwardController {


	public static final String MODELNAME ="ask";
	
	@Autowired
	private AskAwardService service;
	
	@ModelAttribute(MODELNAME)
	public AwardAskVO ask() {
		return new AwardAskVO();
	}
	
	// 관리자가 보는 장학금 신청서 목록 조회 
	@GetMapping
	public String askAwardList(
			
			@RequestParam(name = "page", required = false, defaultValue = "1") int page,
			@ModelAttribute("condition") SimpleCondition simpleCondition, Model model
			
			){
		
		PaginationInfo<AwardAskVO> paging = new PaginationInfo<AwardAskVO>();
		paging.setCurrentPage(page);
		paging.setSimpleCondition(simpleCondition);
		model.addAttribute("ask", service.awardAskList(paging));
		PaginationRenderer renderer = new BootStrapPaginationRenderer();
		model.addAttribute("pagingHTML", renderer.renderPagination(paging, "fnPaging"));
		
		return "awardAsk/awardAskList";
		
	}

	  
	  // 장학금 신청서 상세조회
	  
	 @GetMapping("{shapDocNo}") 
	 public String selectAskAwardDetail(
			 
			 @PathVariable String shapDocNo
			 ,Model model
			 )
	 	{ 
		AwardAskVO ask = service.select(shapDocNo);
		model.addAttribute("ask", ask);
		
		 return "awardAsk/awardAskDetail"; 
		
	 	}
	  
	 
	  // 장학금 신청서 작성

	  @GetMapping("createAwardAsk/new") 
	  public String createAwardAsk(
			  
			  Model model,
			  @ModelAttribute(MODELNAME) AwardAskVO ask
			
			  
			  ){ 
		  
		  model.addAttribute(MODELNAME, ask);
		  return "awardAsk/awardAskForm"; 
		
	  }
	  
	  
	  @PostMapping ("createAskAward")
	  public String create(
			  @ModelAttribute(MODELNAME) AwardAskVO ask, 
			  BindingResult errors,
			  RedirectAttributes redirectAttributes
			  
			  ){ 
		  
		  if(errors.hasErrors()) {
			  return "awardAsk/awardForm";
		  }
		  service.insertAwardAsk(ask);
		  redirectAttributes.addFlashAttribute(MODELNAME, ask);
		  redirectAttributes.addFlashAttribute(BindingResult.MODEL_KEY_PREFIX + MODELNAME, errors);
		  

		  	return "redirect:/askAward/"+ask.getShapDocNo(); 
	  }
	  
	
//	// 수정 폼으로 이동 
//	  @GetMapping("{shapDocNo}/edit") 
//	 public String updateAward(@PathVariable()String awardCd){
//          return "awardAsk/AwardAskDetail"; 
//          }
	 
//	  // 삭제
//	  @DeleteMapping("{awardCd}") 
//	 public String DeleteAward(@PathVariable()String awardCd){ 
//	  return "awardAsk/AwardAskDetail"; 
//	 } 
//	 
//	  // 접수 승인 
//	 @PutMapping("{awardCd}") 
//	  public String SelectAwardAskOk(@PathVariable()String awardCd){
//	  return "awardAsk/AwardAskDetail"; 
//	  }
//	  
//	 // 접수 반려
//	 @PutMapping("{awardCd}") 
//	  public String SelectAwardAskNo(@PathVariable()String awardCd){ 
//	 return "awardAsk/AwardAskDetail"; }
	 
	  @Inject
	  private AwardMapper awardMapper;
	  
	  @ModelAttribute("awardList")
	  public List<AwardVO> awardList(){
		  return awardMapper.selectList();
	  }
	  
	  
	  
}
