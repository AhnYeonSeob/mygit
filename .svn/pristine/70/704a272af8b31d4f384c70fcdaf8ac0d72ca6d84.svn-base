/**
 * 
 */
document.addEventListener('DOMContentLoaded', function(){
	let semester = document.querySelector('#semester');
	let lectTbody = document.querySelector('#lectTbody');
	
	const fnLectureList = function(semstrNo){
		axios.get(`${cp.value}/lecture/${semstrNo}`)
		.then(({data})=>{
			lectTbody.innerHTML = '';
			if(data.length == 0){
				lectTbody.insertAdjacentHTML('beforeend',
				`<tr class="table-light align-middle">
					<td colspan="8" class="text-center fs-4">등록된 강의가 없습니다</td>
				</tr>`);
			}
			data.forEach(lect=>{
				lectTbody.insertAdjacentHTML('beforeend',
				`<tr class="table-light align-middle">
					<td class="text-center">${lect.semstrNo.substring(0,4)}-${lect.semstrNo.substring(4)}</td>
					<td>[${lect.subjectVO.subNm}] ${lect.lectNm}</td>
					<td class="text-center">${lect.professorVO.nm }</td>
					<td class="text-center">${lect.lectScore }</td>
					<td class="text-center">${lect.lectEnNope }</td>
					<td class="text-center">${lect.lectOnlineYn == 'Y' ? '온라인' : '오프라인' }</td>
					<td class="text-center">${lect.commonCodeVO.cocoStts }</td>
					<td class="text-center"><a class="btn btn-primary" href="${cp.value}/lecture/request/${lect.lectNo }">조회</a></td>
				</tr>`)
			});
		});
	};
	
	semester.addEventListener('change', function(){
		fnLectureList(this.value);
	});
	
	axios.get(`${cp.value}/commoncode/semester`)
	.then(({data})=>{
		data.forEach(({semstrNo})=>{
			semester.insertAdjacentHTML('beforeend', `<option value="${semstrNo}" label="${semstrNo.substr(0,4)}-${semstrNo.substr(4)}"/>`);
		});
		if(semstrNo.value){
			semester.value = semstrNo.value;
		}
		semester.dispatchEvent(new Event('change'));
	});
})