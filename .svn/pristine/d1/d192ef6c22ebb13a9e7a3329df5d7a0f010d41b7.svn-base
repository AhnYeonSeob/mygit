package kr.or.ddit.yguniv.projectteam.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.yguniv.attendee.dao.AttendeeMapper;
import kr.or.ddit.yguniv.commons.exception.PKNotFoundException;
import kr.or.ddit.yguniv.lecture.service.LectureMaterialsServiceImpl;
import kr.or.ddit.yguniv.projectTask.service.ProjectTaskService;
import kr.or.ddit.yguniv.projectteam.service.ProjectTeamService;
import kr.or.ddit.yguniv.vo.LectureVO;
import kr.or.ddit.yguniv.vo.ProjectTeamVO;

@Controller
@RequestMapping("/lecture/{lectNo}/projectTeam")
public class ProjectTeamController {
	@Autowired
	private AttendeeMapper attendeeMapper;
	
	@Autowired
	private ProjectTeamService service;
	
	@Autowired
	private ProjectTaskService projectTaskService;
	
	@Autowired
	private LectureMaterialsServiceImpl lectureservice;
	
	@ModelAttribute
	public void addLecture(@PathVariable String lectNo, Model model){
		LectureVO lectureVO = lectureservice.selectLecture(lectNo);
		if(lectureVO == null) {
			throw new PKNotFoundException("해당 강의는 존재하지 않습니다", true);
		}
		model.addAttribute("lecture", lectureVO);
		model.addAttribute("lectNo", lectNo);
	}
	
	//프로젝트팀 목록조회
	@GetMapping
	public String selectList(
			@PathVariable String lectNo
			,Model model
			) {
		model.addAttribute("attendeeCount", attendeeMapper.countAttendee(lectNo));
		
		model.addAttribute("projectTaskList", projectTaskService.readProjectTaskList(lectNo));
		
		return "lecture/materials/projectTeam/projectTeamList";
	}
	//프로젝트팀 목록조회
	@GetMapping("{taskNo}")
	@ResponseBody
	public List<ProjectTeamVO> selectListWithTaskNo(
			@PathVariable String taskNo
			,Model model
			) {
		if(taskNo==null||taskNo.isEmpty()) {
			throw new PKNotFoundException("과제를 선택하지않았습니다.");
		}
		
		return service.readProjectTeamList(taskNo);
	}
	
	//프로젝트팀 상세조회
	@GetMapping("detail/{teamCd}")
	public String select(@PathVariable()String teamCd) {
		
		return "projectTeam/projectTeamDetail";
	}
	//프로젝트팀 생성폼 이동
	@GetMapping("{teamCd}/new")
	public String createForm() {
		
		return "projectTeam/projectTeamList";
	}
	
	
	//프로젝트팀 생성
	@PostMapping("{teamCd}")
	public String create(@PathVariable()int teamCd) {
		
		return "projectTeam/?";
	}
	
	//프로젝트팀 수정폼이동
	@GetMapping("{teamCd}/edit")
	public String updateForm(@PathVariable()int teamCd) {
		
		
		return "projectTeam/projectTeamList";
	}
	
	//프로젝트팀 수정
	@PutMapping("{teamCd}")
	public String update(@PathVariable()int teamCd) {
		
		
		return "projectTeam/?";
	}
	
	//프로젝트팀 삭제
	@DeleteMapping("{teamCd}")
	public String delete(@PathVariable()int teamCd) {
		
		
		return "projectTeam/projectTeamList";
	}

	
}
