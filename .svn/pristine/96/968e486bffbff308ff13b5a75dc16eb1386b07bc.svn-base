package kr.or.ddit.yguniv.board.systemBoard.controller;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.yguniv.board.systemBoard.service.SystemBoardService;
import kr.or.ddit.yguniv.paging.PaginationInfo;
import kr.or.ddit.yguniv.paging.SimpleCondition;
import kr.or.ddit.yguniv.paging.renderer.BootStrapPaginationRenderer;
import kr.or.ddit.yguniv.paging.renderer.PaginationRenderer;
import kr.or.ddit.yguniv.vo.SystemNoticeBoardVO;

//시스템 공지사항 
@Controller
@RequestMapping("/yguniv/systemBoard")
public class SystemBoardController {

	
	@Inject
	private SystemBoardService service;

	@GetMapping() // 목록 조회
	public String selectList(

			@RequestParam(name = "page", required = false, defaultValue = "1") int page,
			@ModelAttribute("condition") SimpleCondition simpleCondition, Model model

	) {
		PaginationInfo<SystemNoticeBoardVO> paging = new PaginationInfo<SystemNoticeBoardVO>();
		paging.setCurrentPage(page);
		paging.setSimpleCondition(simpleCondition);
		model.addAttribute("boardList", service.selectList(paging));
		PaginationRenderer renderer = new BootStrapPaginationRenderer();
		model.addAttribute("pagingHTML", renderer.renderPagination(paging, "fnPaging"));

		return "systemBoard/systemBoardList";

	}

	// 상세조회
	@GetMapping("{snbNo}")
	public String selectSystemBoard(@PathVariable String snbNo, Model model) {
		SystemNoticeBoardVO systemBoard = service.selectSystemBoard(snbNo);
		model.addAttribute("systemBoard", systemBoard);
		return "systemBoard/systemBoardDetail";
	}
	
	// 작성 폼으로 이동 
	@GetMapping
	public String createSystemBoard() {

		return "systemBoard/systemBoardForm";
	}
	
	
	  @PostMapping() //시스템 공지사항 게시글 추가 
	  public String create(
			  @ModelAttribute("board") SystemNoticeBoardVO board,
			  RedirectAttributes redirectAttributes
			  ) { 
		  
		  service.insertSystemBoard(board);
		  
		  redirectAttributes.addFlashAttribute("board", board);
		  
		  return "redirect:/yguniv/systemBoard/systemBoardDetail"; 
		  }
	

	
//		//수정
//		@PutMapping("{snbNo}/edit")
//		public String updateSystemBoard(@PathVariable("snbNo") String snbNo, Model model) {
//			
//			SystemNoticeBoardVO board =service.updateSystemBoard();
//			model.addAttribute("board",board);
//			
//			return "systemBoard/systemBoardEdit";
//		}
		
//		//과제삭제
//		@DeleteMapping("{snbNo}")
//		public String deleteSystemBoard(@PathVariable String snbNo, Model model) {
//		
//			return "systemBoard/systemBoardList";
//		}
	
	
}



