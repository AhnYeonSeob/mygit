<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.yguniv.attendance.dao.AttendanceMapper">
<resultMap type="AttendanceVO" id="attendanceMap" autoMapping="true">
    <association property="commonCodeVO" javaType="CommonCodeVO" autoMapping="true">
        <result property="cocoStts" column="atndCocoStts"/>
    </association>
<!--     <association property="personVO" javaType="PersonVO" autoMapping="true"/> -->
	<association property="studentVO" javaType="StudentVO" autoMapping="true"/>
    <association property="orderVO" javaType="OrderLectureDataVO" autoMapping="true">
        <association property="timeCommonCodeVO" javaType="CommonCodeVO">
            <result property="cocoStts" column="sectTimeCocoStts"/>
        </association>
    </association>
</resultMap>
	
<!-- 아이디는 바로 조인해서 찾으면된다 -->

	<!-- 한 학생의 출결 조회 (수정하기 위해서) -->	
	<select id="selectAttendance" resultMap="attendanceMap">
		SELECT
			B.LECT_NM
			, C.COCO_STTS
			, A.LECT_ORDER
			, D.ID
			, D.NM
			, B.LECT_ONLINE_YN
			, D.COCO_STTS
		FROM ATTENDANCE A
			INNER JOIN LECTURE B ON B.LECT_NO = A.LECT_NO
			INNER JOIN COMMON_CODE C ON C.COCO_CD = A.WEEK_CD
			INNER JOIN COMMON_CODE C ON C.COCO_CD = A.ATND_CD
			INNER JOIN PERSON D ON D.ID = A.STU_ID
		WHERE A.LECT_NO = #{lectNo} AND A.WEEK_CD = #{weekCd} AND A.LECT_ORDER = #{lectOrder}  AND A.STU_ID = #{stuId} 
	</select>
	
	<!-- 각 주차별 강의 출결 조회	 -->
	<select id="selectAttendanceList" resultMap="attendanceMap">
<!-- 	SELECT DISTINCT A.LECT_NO, A.LECT_ORDER, A.WEEK_CD, A.STU_ID, B.NM, C.SECT_DT, E.CROOM_NM, F.COCO_STTS -->
<!--     FROM ATTENDANCE A -->
<!--         INNER JOIN PERSON B ON A.STU_ID = B.ID -->
<!--         INNER JOIN ORDER_LECTURE_DATA C ON A.LECT_ORDER = C.LECT_ORDER -->
<!--         INNER JOIN SCHEDULE D ON A.LECT_NO = D.LECT_NO -->
<!--         INNER JOIN CLASS_ROOM E ON E.CROOM_CD = D.CROOM_CD -->
<!--         INNER JOIN COMMON_CODE F ON F.COCO_CD = A.ATND_CD -->
<!-- 		WHERE B.LECT_NO = #{lectNo, jdbcType=VARCHAR} AND A.WEEK_CD = #{weekCd, jdbcType=VARCHAR	} -->
	SELECT 
	    B.LECT_NO
	    , B.WEEK_CD
	    , B.LECT_ORDER
	    , E.COCO_STTS AS sectTimeCocoStts 
	    , C.ID
	    , C.NM
	    , B.SECT_DT
	    , D.COCO_STTS AS atndCocoStts
        , A.ATND_IDNTY
	FROM 
	    ATTENDANCE A
	    INNER JOIN ORDER_LECTURE_DATA B ON A.LECT_ORDER = B.LECT_ORDER
	        AND A.LECT_NO = B.LECT_NO 
	        AND A.WEEK_CD = B.WEEK_CD
	    INNER JOIN PERSON C ON A.STU_ID = C.ID 
	    INNER JOIN COMMON_CODE D ON A.ATND_CD = D.COCO_CD  
	    INNER JOIN COMMON_CODE E ON B.SECT_ETIME = E.COCO_CD
<!-- 	WHERE  -->
<!-- 	    A.LECT_NO = #{lectNo, jdbcType=VARCHAR} AND  -->
<!-- 	    A.WEEK_CD = #{weekCd, jdbcType=VARCHAR} AND  -->
<!-- 	    B.LECT_ORDER = #{lectOrder, jdbcType=VARCHAR} -->
		
	
	
<!-- 	SELECT A.LECT_NO, A.WEEK_CD, A.LECT_ORDER, E.COCO_STTS, C.ID, C.NM , A.SECT_DT, D.COCO_STTS  -->
<!-- 	FROM ORDER_LECTURE_DATA A -->
<!-- 	    INNER JOIN ATTENDANCE B ON A.LECT_ORDER = B.LECT_ORDER -->
<!-- 	    INNER JOIN PERSON C ON B.STU_ID = C.ID  -->
<!-- 	    INNER JOIN COMMON_CODE D ON B.ATND_CD = D.COCO_CD   -->
<!-- 	    INNER JOIN COMMON_CODE E ON A.SECT_ETIME = E.COCO_CD -->
<!--     WHERE A.LECT_NO = #{lectNo, jdbcType=STRING} AND B.LECT_NO = #{lectNo, jdbcType=STRING} AND A.WEEK_CD = #{weekCd} AND B.WEEK_CD = #{weekCd} AND A.LECT_ORDER = '2' -->
	
	
	</select>

    <!-- 주차와 강의차수에 맞는 출결 데이터를 조회하는 쿼리 -->
    <select id="selectAttendanceByWeekAndOrder" resultMap="attendanceMap">
	    SELECT 
		    B.LECT_NO
		    , B.WEEK_CD
		    , B.LECT_ORDER
		    , E.COCO_STTS
		    , C.ID
		    , C.NM
		    , B.SECT_DT
		    , D.COCO_STTS 
		FROM 
		    ATTENDANCE A
		    INNER JOIN ORDER_LECTURE_DATA B ON A.LECT_ORDER = B.LECT_ORDER
		        AND A.LECT_NO = B.LECT_NO 
		        AND A.WEEK_CD = B.WEEK_CD
		    INNER JOIN PERSON C ON A.STU_ID = C.ID 
		    INNER JOIN COMMON_CODE D ON A.ATND_CD = D.COCO_CD  
		    INNER JOIN COMMON_CODE E ON B.SECT_ETIME = E.COCO_CD
		WHERE 
		    A.LECT_NO = #{lectNo, jdbcType=VARCHAR} AND 
		    A.WEEK_CD = #{weekCd, jdbcType=VARCHAR}
<!-- 		B.LECT_ORDER = #{lectOrder, jdbcType=VARCHAR} -->
    
    
    
    
	    <!-- SELECT DISTINCT
	        STU_ID
	        , WEEK_CD
	        , LECT_ORDER
	        , LECT_NO
	        , ATND_CD
	        , ATND_RCOGN_YN
	        , ATND_IDNTY
	    FROM ATTENDANCE
	    WHERE week_cd = #{weekCd} AND lect_order = #{lectOrder} -->
	</select>

	
	<insert id="insertAttendance">
	    INSERT INTO ATTENDANCE
	    (STU_ID
       	, WEEK_CD
       	, LECT_ORDER
		, LECT_NO
		, ATND_CD
		, ATND_RCOGN_YN
		, ATND_IDNTY)
	    VALUES
	    (#{stuId}, #{weekCd}, #{lectOrder}, #{lectNo}, #{atndCd}, #{atndIdnty})
	</insert>


	<update id="updateAttendance">
		UPDATE ATTENDANCE
		SET ATND_CD = #{atndCd, jdbcType=VARCHAR}
		WHERE STU_ID = #{stuId, jdbcType=VARCHAR} 
		      AND LECT_NO = #{lectNo, jdbcType=VARCHAR} 
		      AND WEEK_CD = #{weekCd, jdbcType=VARCHAR} 
		      AND LECT_ORDER = #{lectOrder, jdbcType=NUMERIC}
	</update>


	<delete id="deleteAttendance">
		DELETE 
		FROM ATTENDANCE
		WHERE STU_ID = #{stuId} AND 
		      LECT_NO = #{lectNo} AND 
		      WEEK_CD = #{weekCd} AND
		      LECT_ORDER = #{lectOrder}
	</delete>
	
	
	
	
	
</mapper>