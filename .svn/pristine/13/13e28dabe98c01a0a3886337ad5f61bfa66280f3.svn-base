
document.addEventListener("DOMContentLoaded", () => {
	
	const contextPath = document.getElementById('contextPath').value;
	const cnbNo = document.getElementById('cnbNo').value;
	
	
	// 공지사항 게시판 상세조회
	fetch(`${contextPath}/lecture/${lectNo.value}/board/boardDetail/${cnbNo}`)
	        .then(response => response.json())  // 서버에서 받은 JSON 응답
	        .then(data => {
			console.log("data : ", data);
			document.getElementById('absenceReason2').innerHTML = data.cnbNotes; // 게시물에 CK에디터 넣어주기
			renderFileDetails(data.atchFile.fileDetails)
		})
	
	// 서버에서 받은 파일 상세 목록 데이터를 렌더링하는 함수
	function renderFileDetails(fileDetails) {
	    const container = document.getElementById('fileDetailsContainer'); 
	    container.innerHTML = ''; // 기존 내용을 초기화
	
	    if (fileDetails && fileDetails.length > 0) {
	        let content = '<td>'; // 파일 리스트를 <td> 안에 넣을 것임

	        fileDetails.forEach((fd, index) => {
	            const downUrl = `${contextPath}/absence/atch/${fd.atchFileId}/${fd.fileSn}`; // 다운로드 URL 생성
	            content += `
	                <a href="${downUrl}">${fd.orignlFileNm} (${fd.fileFancysize})</a>
	                ${index !== fileDetails.length - 1 ? '|' : ''} <!-- 마지막 항목 뒤에 '|' 추가 -->
	            `;
	        });
	
	        content += '</td>'; // <td> 태그 닫기
	        container.innerHTML = content; // 최종적으로 동적으로 생성된 내용을 container에 삽입
	    } else {
	        container.innerHTML = '<td>첨부파일 없음</td>'; // 파일이 없을 경우
	    }
	}
	
	
	// 수정버튼을 눌렀을때 모달창 띄워주기
	document.querySelectorAll('.editButton').forEach(button => {
		button.addEventListener('click', function() {
			console.log("수정 버튼 눌렀음")
	
		});
	});
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	// 날짜, 시간 포맷팅 작업
	
	document.addEventListener("DOMContentLoaded", function() {
	    // 모든 td[id="realDate"] 요소에 대해 처리
	    document.querySelectorAll('td[id="realDate"]').forEach(function(td) {
	        // 각 td에서 data-cnbdt 값을 읽어옵니다.
	        const cnbDt = td.getAttribute('data-cnbdt');
	        
	        // 서버에서 비동기적으로 데이터 요청
	        fetch('/path/to/your/endpoint', { 
	            method: 'POST', 
	            headers: { 
	                'Content-Type': 'application/json' 
	            },
	            body: JSON.stringify({ cnbDt: cnbDt }) // 요청 본문에 cnbDt를 JSON 형식으로 전달
	        })
	        .then(response => response.json())
	        .then(data => {
	            // 서버에서 받아온 데이터로 날짜 처리
	            td.innerHTML = timeAgo(data.cnbDt);  // timeAgo 함수로 날짜 변환 후 HTML에 삽입
	        })
	        .catch(error => {
	            console.error('Error fetching data:', error);
	            td.innerHTML = 'Error loading date';
	        });
	    });
	});

	
	
	// 시간 데이터 포맷
	function timeAgo(date) {
	    const now = new Date();
	    const targetDate = new Date(date);
	
	    // 날짜가 오늘인지 확인
	    const isToday = now.toDateString() === targetDate.toDateString();
	
	    // 시간 차이 계산
	    const diffInMs = now - targetDate; // 시간 차이 (밀리초 단위)
	    const diffInSec = Math.floor(diffInMs / 1000); // 초 단위로 변환
	    const diffInMin = Math.floor(diffInSec / 60); // 분 단위로 변환
	    const diffInHour = Math.floor(diffInMin / 60); // 시간 단위로 변환
	
	    if (isToday) {
	        // 오늘 날짜일 경우
	        if (diffInMin < 2) {
	            return "방금 전";  // 2분 이내
	        } else if (diffInMin < 60) {
	            return `${diffInMin}분 전`;  // 2분 이상 1시간 미만
	        } else {
	            return `${diffInHour}시간 전`;  // 1시간 이상
	        }
	    } else {
	        // 오늘이 아닌 날짜일 경우
	        const year = targetDate.getFullYear();
	        const month = String(targetDate.getMonth() + 1).padStart(2, '0');
	        const day = String(targetDate.getDate()).padStart(2, '0');
	        return `${year}년 ${month}월 ${day}일`;  // 년-월-일 형식
	    }
	}
	
	// 예시 사용법:
	const timeString = '2025-01-04T10:25:54';  // 예시 시간
	console.log(timeAgo(timeString));  // 오늘 날짜가 아니면 "2025-01-04" 형식으로 출력


}); 




