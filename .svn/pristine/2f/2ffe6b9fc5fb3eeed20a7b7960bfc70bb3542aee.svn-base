package kr.or.ddit.yguniv.studentCard.controller;

import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.yguniv.paging.PaginationInfo;
import kr.or.ddit.yguniv.paging.SimpleCondition;
import kr.or.ddit.yguniv.paging.renderer.BootStrapPaginationRenderer;
import kr.or.ddit.yguniv.paging.renderer.PaginationRenderer;
import kr.or.ddit.yguniv.studentCard.service.StudentCardService;
import kr.or.ddit.yguniv.vo.CommonCodeVO;
import kr.or.ddit.yguniv.vo.StudentCardVO;

@Controller
@RequestMapping("studentCard")
public class StudentCardController {
	
	public static final String MODELNAME = "card";
	
	@Autowired
	private StudentCardService service;
	

	
	@ModelAttribute(MODELNAME)
	public StudentCardVO studentCard() {
		return new StudentCardVO();
	}
	
	// 교직원이 보는 학생 신청 상세 조회 
	@GetMapping("{stuId}")
	public String selectStudentDetail(
			
			@PathVariable String stuId,
			Model model
			
			) {
		
		StudentCardVO studentCard = service.selectStudentCardDetail(stuId);
		
		model.addAttribute(MODELNAME,studentCard);
		
		return "studentCard/studentCardDetail"; 
	}
	
	//학생이 신청하는 학생증 발급 신청
	//신청 폼
	@GetMapping("createStudentCard/new")
	public String createStudentCard(
			Model model 
			,@ModelAttribute(MODELNAME) StudentCardVO card
			) {
		model.addAttribute(MODELNAME,card);
		
		return "studentCard/studentCardForm";
	}
	
	
	//신청 
	
	
	//교직원이 보는 학생증 신청 목록 조회 LIST
	@GetMapping
	public String selectStudentList(
			@RequestParam(name = "page", required = false, defaultValue = "1") int page,
			@ModelAttribute("condition") SimpleCondition simpleCondition, Model model

			) {
		
		PaginationInfo<StudentCardVO> paging = new PaginationInfo<StudentCardVO>();
		paging.setCurrentPage(page);
		paging.setSimpleCondition(simpleCondition);
		model.addAttribute("card", service.selectStudentCardList(paging));
		PaginationRenderer renderer = new BootStrapPaginationRenderer();
		model.addAttribute("pagingHTML", renderer.renderPagination(paging, "fnPaging"));
		
		return "studentCard/studentCardList";
	};
	
	//학생증 신청 상태 수정
	@PostMapping("updateStatus")
	public String updateStatus(
			@RequestParam String cocoStts
			,@RequestParam String stuId
			,Model model
			) {
		
		service.updateStatus(stuId, stuId);
		
		StudentCardVO studentCard = service.selectStudentCardDetail(stuId);
		
		model.addAttribute("card", studentCard);
		
		return "redirect:studentCard";
		
		
	}
	
	//학생증 신청 목록 삭제 

	
	
}
