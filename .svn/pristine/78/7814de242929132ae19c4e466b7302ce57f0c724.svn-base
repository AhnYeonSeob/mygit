/**
 * 
 */
const url = "../yguniv/dissent"
const upBtn = document.getElementById("upBtn")
const selDiv = document.getElementById("selDiv");



//1인 조회용도
async function findOne(stu,lec){
	
	const testDiv = document.getElementById("testDiv");
	const findUrl = `${url}/${stu}/${lec}`;
	
	
	console.log(findUrl)
	var resp = await fetch(findUrl);
	var pars = await resp.json();
	var data = await pars.dissOne;
	
	
	code=``;
	code+=`
	<table class="table table-bordered">
			<tr>
				<th>강의번호</th>
				<th>강의명</th>
				<th>학번</th>
				<th>이름</th>
				<th>출석</th>
				<th>과제</th>
				<th>시험</th>
			</tr>		
			<tr>
				<input type='hidden' name='lectNo' id='lectNo' value='${data.lectNo}'></input>
				<input type='hidden' name='stuId' id='stuId' value='${data.attenVO.stuId}'></input>
				<td>${data.lectNo}</td>
				<td>${data.lectVO.lectNm}</td>
				<td>${data.attenVO.stuId}</td>
				<td>${data.nm}</td>
				<td><input type='number' name='attenVO.assigScore' id='assigScore' value='${data.attenVO.assigScore}'></input></td>
				<td><input type='number' name='attenVO.attenAtndScore' id='attenAtndScore' value='${data.attenVO.attenAtndScore}'></input></td>
				<td><input type='number' name='attenVO.testScore' id='testScore' value='${data.attenVO.testScore}'></input></td>

			</tr>	
			<tr>
				<th colspan='7'>이의 내용</th>
			</tr>	
			<tr>
				<td colspan='7'>${data.objcCn}</td>				
			</tr>	
			<tr>
				<th colspan='7'>답변 작성</th>
			</tr>	
			<tr>
				<td colspan='7'><textarea id='answerCn' name='answerCn'></textarea></td>				
			</tr>
			<tr>
			<td colspan='7'><button type="button"  onclick="updateForm();" id="upBtn"> 수정하기 </button>
			<button type="button" id="delBtn" onclick="deleteUp()"> 삭제하기 </button></td>
			</tr>

	</table>
	
	`;
	selDivClean();
	selDiv.innerHTML=code;
	console.log(document.getElementById("selForm")); // 확인용
//	asd = await makeTag(data,testDiv);
//	testDiv.innerHTML=asd;
}

 //선택창 비우기
 function selDivClean(){
	 const selDiv = document.querySelector("#selDiv")
	 selDiv.replaceChildren();
 }

async function updateForm() {
    const formd = document.getElementById("selForm");
	console.log(formd); // 확인용
    

    const formData = new FormData(formd);
    const jsonData = {};

    formData.forEach((value, key) => {
        console.log("키:", key); // 키 확인
        console.log("값:", value); // 값 확인

        // 키가 'attenVO.'로 시작하면, 'attenVO' 객체를 만들어서 중첩된 구조로 저장
        if (key.startsWith('attenVO.')) {
            const attenKey = key.replace('attenVO.', ''); // 'attenVO.'를 제외한 나머지 키
            if (!jsonData.attenVO) {
                jsonData.attenVO = {}; // 'attenVO' 객체가 없으면 생성
            }
            jsonData.attenVO[attenKey] = value; // 중첩된 객체에 값을 저장
        } else {
            jsonData[key] = value; // 다른 키는 평문으로 저장
        }
    });

    console.log(JSON.stringify(jsonData));

	const upResp = await fetch(url,{
		method:'put',
		headers:{
			'Content-type':'application/json'
		},
		body:JSON.stringify(jsonData)
	})
	
	const da = await upResp.json();
	console.log(da)



}

// 여부 타입에 대하여 N을 자동으로 기입 함수 	설정이 실패 했을 때 디폴트 값이 0이 되는 함수

async function makeTag(parseData, parentTag) {
    let code = '<table class="table table-bordered">';
    for (let key in parseData) {
        if (typeof parseData[key] === 'object' && parseData[key] !== null) {
            code += `<tr><td>${key} : <input type='text' class='bind-target' id='${key}' name='${key}' value='Nested Object'></input></td></tr>`;
            code += await makeTag(parseData[key], parentTag);
        } else {
            let value = parseData[key] ? parseData[key] : '비어있음';
            code += `<tr><td>${key} : <input type='text' class='bind-target' id='${key}' name='${key}' value='${value}'></input></td></tr>`;
        }
    }
    code += '</table>';
    
    console.log(code);
return code;
}


/**
document.addEventListener("DOMContentLoaded", () => {
  

    selDiv.addEventListener("submit", async (e) => {
        if (e.target.id === "scoreForm") {
            console.log("폼 제출 이벤트 발생");
            
            e.preventDefault();
            console.log(e.target);
            const formData = new FormData(e.target);
            const jsonData = {};
            formData.forEach((value, key) => {
                console.log(key, value);
                jsonData[key] = value;
            });

            console.log("JSON 데이터:", jsonData);

            // 여기에 서버로 데이터를 전송하는 로직 추가 가능
            // 예: await fetch('/your-api-url', { method: 'POST', body: JSON.stringify(jsonData), headers: { 'Content-Type': 'application/json' } });
        }
    });
});

 */














