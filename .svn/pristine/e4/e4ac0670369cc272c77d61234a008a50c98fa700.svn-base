package kr.or.ddit.yguniv.graduation.controller;

import java.security.Principal;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.yguniv.graduation.service.GraduationService;
import kr.or.ddit.yguniv.vo.AtchFileDetailVO;
import kr.or.ddit.yguniv.vo.GraduationVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/graduation")
public class GraduationController {
	
	public static final String MODELNAME="graduation";
	
	@Autowired
	private GraduationService service;
	
	
	@ModelAttribute(MODELNAME)
	public GraduationVO graduation() {
		return new GraduationVO();
	}
	
	
	// form으로 보냄
	@GetMapping("new")
	public String createForm() {
		return "graduation/graduationForm";
	}
	
	// 전체조회
	@GetMapping()
	public String main(Model model, Principal principal) {
		model.addAttribute("principal", principal.getName());
		return "graduation/graduationMain";
	}

	// 영어 생성 폼으로 보냄
	@GetMapping("neweng/{stuId}")
	public String createEng(@PathVariable("stuId") String stuId) {
		return "graduation/graduationForm";
	}

	// 상세조회
	@GetMapping("list/{stuId}")
	public String graduationListById(@PathVariable("stuId") String stuId, Model model, Principal prin) {
		List<GraduationVO>list = service.selectgraduationList(stuId);
		model.addAttribute("list",list);
		model.addAttribute("principal", prin.getName());
		int totalScore=service.selectTotalVolunteerScore(stuId);
		model.addAttribute("totalScore", totalScore);
		return "graduation/graduationList";
	}
	
	
	//영어 점수 등록
	@PostMapping("create/eng")
	public String createEng(@ModelAttribute(MODELNAME) GraduationVO graduation
			,BindingResult errors
			,RedirectAttributes redirectAttributes
			) throws Exception {
		try {
			String lvn = null;
			if (!errors.hasErrors()) {
				service.insertgraduation(graduation);
				lvn = "redirect:/graduation/"+graduation.getStuId();
			} else {
				redirectAttributes.addFlashAttribute(MODELNAME, graduation);
				redirectAttributes.addFlashAttribute(BindingResult.MODEL_KEY_PREFIX + MODELNAME, errors);
				lvn = "redirect:/graduation/neweng/"+graduation.getStuId();
			}
			return lvn;
		}catch (Throwable e) {
			throw new Exception(e);
		}
	}

	// 수정
	@PutMapping("{gdtCd}")
	public String update(@PathVariable() String gdtCd) {
		return "graduation/graduationDetail";
	}

	// 삭제
	@DeleteMapping("{gdtCd}")
	public String delete(@PathVariable() String gdtCd) {
		return "graduation/graduationList";
	}
	

	@GetMapping("{jobNo}/atch/{atchFileId}/{fileSn}")
	public ResponseEntity<Resource> serveFile(
	        @PathVariable("jobNo") String jobNo,
	        @PathVariable("atchFileId") int atchFileId,
	        @PathVariable("fileSn") int fileSn) {
	    // 1. 파일 정보 조회
	    AtchFileDetailVO fileDetail = service.download(atchFileId, fileSn);

	    // 2. 파일 존재 여부 확인
	    Resource resource = fileDetail.getSavedFile();
	    if (resource == null || !resource.exists()) {
	        throw new RuntimeException("파일을 찾을 수 없습니다.");
	    }

	    // 3. MIME 타입 설정
	    String contentType = fileDetail.getFileMime();
	    if (contentType == null) {
	        contentType = "application/octet-stream";
	    }

	    // 4. 파일 반환
	    return ResponseEntity.ok()
	            .header(HttpHeaders.CONTENT_TYPE, contentType)
	            .body(resource);
	}
}

