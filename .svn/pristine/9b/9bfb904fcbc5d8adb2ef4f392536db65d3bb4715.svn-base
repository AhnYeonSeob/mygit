<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.yguniv.lecture.dao.LectureMaterialsMapper">
	<resultMap type="LectureWeekVO" id="lectureDataList" autoMapping="true">
		<id property="weekCd" column="WEEK_CD"/>
		<association property="commonCodeVO" javaType="CommonCodeVO" autoMapping="true"/>
		<association property="lectureVO" javaType="LectureVO" autoMapping="true"/>
		<collection property="orderLectureDataList" ofType="OrderLectureDataVO" autoMapping="true">
			<id property="lectOrder" column="LECT_ORDER"/>
			<result property="weekCd" column="ORDER_WEEK_CD"/>
		</collection>
	</resultMap>
	<!-- 강의 수업 목록 조회 -->
	<select id="selectOrderLectureDataList" resultMap="lectureDataList">
		SELECT W.WEEK_CD, W.LEWE_NM
		    , C.COCO_STTS, L.LECT_ONLINE_YN
		    , D.LECT_ORDER, D.LECT_NO, D.WEEK_CD AS ORDER_WEEK_CD
		    , D.SECT_NM, D.SECT_DT, D.SECT_ET, D.SECT_IDNTY
		FROM (SELECT *
			FROM LECTURE_WEEK
			WHERE LECT_NO = #{lectNo, jdbcType=VARCHAR}) W
        LEFT OUTER JOIN ORDER_LECTURE_DATA D ON(D.WEEK_CD = W.WEEK_CD AND D.LECT_NO = #{lectNo, jdbcType=VARCHAR})
		INNER JOIN COMMON_CODE C ON(W.WEEK_CD = C.COCO_CD)
		INNER JOIN LECTURE L ON(W.LECT_NO = L.LECT_NO)
		ORDER BY W.WEEK_CD, D.LECT_ORDER
	</select>
	<resultMap type="kr.or.ddit.yguniv.vo.OrderLectureDataVO" id="orderLectureDataFile" autoMapping="true">
		<id property="lectOrder" column="LECT_ORDER"/>
		<collection property="atchFileDetailList" ofType="AtchFileDetailVO" autoMapping="true"/>
	</resultMap>
	<!-- 강의 상세 조회(강의방 입장) -->
	<select id="selectOrderLectureData" resultMap="orderLectureDataFile">
		SELECT D.LECT_ORDER, D.WEEK_CD, D.LECT_NO
		    , D.SECT_NM, D.SECT_DT, D.SECT_ET, D.SECT_IDNTY
		    , F.FILE_SN, F.ATCH_FILE_ID, F.FILE_STRE_COURS, F.STRE_FILE_NM, F.ORIGNL_FILE_NM
		    , F.FILE_EXTSN, F.FILE_CN, F.FILE_SIZE, F.FILE_FANCYSIZE, F.FILE_MIME, F.FILE_DWNCNT
		FROM ORDER_LECTURE_DATA D
		LEFT OUTER JOIN ATCH_FILE_DETAIL F ON(D.ATCH_FILE_ID = F.ATCH_FILE_ID AND D.LECT_NO = #{lectNo, jdbcType=VARCHAR})
		WHERE D.LECT_ORDER = #{lectOrder, jdbcType=NUMERIC}
	</select>
	<select id="selectLectureWeek" resultType="int">
		SELECT COUNT(*)
		FROM LECTURE_WEEK
		WHERE LECT_NO = #{lectNo}
		AND WEEK_CD = #{weekCd}
	</select>
	<!-- 강의 주차 추가 -->
	<insert id="insertLectureWeek">
		INSERT INTO LECTURE_WEEK (
		    WEEK_CD, LECT_NO, LEWE_NM
		) VALUES (
		    #{weekCd, jdbcType=VARCHAR}, #{lectNo, jdbcType=VARCHAR}, #{leweNm, jdbcType=VARCHAR}
		)
	</insert>
	<!-- 강의 주차 수정 -->
	<update id="updateLectureWeek">
		UPDATE LECTURE_WEEK SET
			LEWE_NM = #{leweNm, jdbcType=VARCHAR}
		WHERE
		    WEEK_CD = #{weekCd, jdbcType=VARCHAR}
		    AND LECT_NO = #{lectNo, jdbcType=VARCHAR}
	</update>
	<!-- 강의 주차 삭제 -->
	<delete id="deleteLectureWeek">
		DELETE FROM LECTURE_WEEK
		WHERE
		    WEEK_CD = #{weekCd, jdbcType=VARCHAR}
		    AND LECT_NO = #{lectNo, jdbcType=VARCHAR}
	</delete>
	<!-- 강의 차시 추가 -->
	<insert id="insertOrderLectureData">
		INSERT INTO ORDER_LECTURE_DATA (
		    LECT_ORDER, WEEK_CD, LECT_NO
		    , SECT_NM, SECT_DT, SECT_ET
		    , SECT_IDNTY, ATCH_FILE_ID
		) VALUES (
		    #{lectOrder, jdbcType=NUMERIC}, #{weekCd, jdbcType=VARCHAR}, #{lectNo, jdbcType=VARCHAR}
		    , #{sectNm, jdbcType=VARCHAR}, #{sectDt, jdbcType=VARCHAR}, #{sectEt, jdbcType=VARCHAR}
		    , #{sectIdnty, jdbcType=VARCHAR}, #{atchFileId, jdbcType=NUMERIC}
		)
	</insert>
	<!-- 강의 차시 수정 -->
	<update id="updateOrderLectureData">
		UPDATE ORDER_LECTURE_DATA SET
			WEEK_CD = #{weekCd, jdbcType=VARCHAR}
			, LECT_ORDER = #{lectOrder, jdbcType=NUMERIC}
			, SECT_NM = #{sectNm, jdbcType=VARCHAR}
		    , SECT_DT = #{sectDt, jdbcType=VARCHAR}
		    , SECT_ET = #{sectEt, jdbcType=VARCHAR}
		    , SECT_IDNTY = #{sectIdnty, jdbcType=VARCHAR}
		<if test="atchFileId neq null">
		    , ATCH_FILE_ID = #{atchFileId, jdbcType=NUMERIC}
		</if>
		WHERE
		    LECT_ORDER = #{originLectOrder, jdbcType=NUMERIC}
		    AND LECT_NO = #{lectNo, jdbcType=VARCHAR}
	</update>
	<!-- 강의 차시 삭제 -->
	<delete id="deleteOrderLectureData">
		DELETE FROM ORDER_LECTURE_DATA
		WHERE
		    WEEK_CD = #{weekCd, jdbcType=VARCHAR}
		    AND LECT_NO = #{lectNo, jdbcType=VARCHAR}
		<!-- 강의 주차 삭제전 주차에 해당하는 차시 삭제의 경우인지 판단 -->
		<if test="lectOrder neq null">
		    AND LECT_ORDER = #{lectOrder, jdbcType=NUMERIC}
		</if>
	</delete>
	<!-- 강의 기본정보 조회 -->
	<resultMap type="LectureVO" id="lecture" autoMapping="true">
		<id property="lectNo" column="LECT_NO"/>
		<association property="subjectVO" javaType="SubjectVO" autoMapping="true">
			<association property="subFicdCdCommonCodeVO" javaType="CommonCodeVO">
				<result property="cocoStts" column="COCO_STTS"/>
			</association>
		</association>
		<association property="professorVO" javaType="ProfessorVO" autoMapping="true">
			<id property="profeId" column="PROFE_ID"/>
			<association property="person" javaType="PersonVO">
				<result property="nm" column="NM"/>
				<result property="proflPhoto" column="PROFL_PHOTO" javaType="byte[]" jdbcType="BLOB"/>
			</association>
		</association>
		<collection property="attendeeList" ofType="AttendeeVO">
			<id property="stuId" column="STU_ID"/>
			<association property="personVO" javaType="PersonVO">
				<result property="nm" column="STU_NM"/>
			</association>
		</collection>
	</resultMap>
	<select id="selectLecture" resultMap="lecture">
		SELECT L.LECT_NO, L.LECT_NM, L.LECT_SESSION, L.LECT_ONLINE_YN
		    , S.COCO_STTS
		    , P.NM, P.PROFE_ID, P.PROFL_PHOTO
		    , A.NM AS STU_NM, A.STU_ID
		FROM LECTURE L
		INNER JOIN (SELECT SUB_NO, COCO_STTS
		            FROM SUBJECT
		            INNER JOIN COMMON_CODE ON(SUB_FICD_CD = COCO_CD)) S ON(L.SUB_NO = S.SUB_NO)
		INNER JOIN (SELECT PROFE_ID, NM, PROFL_PHOTO
		            FROM PROFESSOR
		            INNER JOIN PERSON ON(PROFE_ID = ID)) P ON(L.PROFE_ID = P.PROFE_ID)
		LEFT OUTER JOIN (SELECT STU_ID, NM, ATTENDEE.LECT_NO
		            FROM ATTENDEE
		            INNER JOIN PERSON ON(STU_ID = ID)) A ON(L.LECT_NO = A.LECT_NO)
		WHERE L.LECT_NO = #{lectNo, jdbcType=VARCHAR}
		AND LECT_STATUS_CD = 'L03'
	</select>
</mapper>