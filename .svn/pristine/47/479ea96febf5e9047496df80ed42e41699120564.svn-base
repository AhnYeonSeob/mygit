package kr.or.ddit.yguniv.test.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.yguniv.paging.PaginationInfo;
import kr.or.ddit.yguniv.paging.renderer.BootStrapPaginationRenderer;
import kr.or.ddit.yguniv.paging.renderer.PaginationRenderer;
import kr.or.ddit.yguniv.test.service.TestService;
import kr.or.ddit.yguniv.vo.LectureVO;
import kr.or.ddit.yguniv.vo.ProfessorVO;
import kr.or.ddit.yguniv.vo.TestVO;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/test")
@RequiredArgsConstructor
public class TestController {
	
	public static final String MODELNAME = "newTest";
	
	private final TestService service;

	//교수 개인의 강의 리스트 조회
	//추후에 로그인 한 교수의 교번을 가져와야함!
	public static final String PROFESSOR="2024300001";

	@ModelAttribute(MODELNAME)
	public TestVO newModel() {
		return new TestVO();
	}
	
	// 교직원이 등록된 시험을 조회
	// 교수는 자신이 등록한 리스트를 조회
	// 교직원의 아이디와 교수의 아이디 - 인증 객체에서 아이디를 가져와서 202420 인지 30인지 비교하기
	@GetMapping()
	public String selectList(Model model) {
		/*
		PaginationInfo<TestVO> paging = new PaginationInfo<TestVO>();
		paging.setDetailCondition(detailCondition);
		paging.setCurrentPage(page);
		
		PaginationRenderer renderer = new BootStrapPaginationRenderer();
		String pagingHTML = renderer.renderPagination(paging, null);
		
		 */
		List<TestVO> list = service.selectTestList(PROFESSOR);
		log.info("§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§§{}",list);


		
		model.addAttribute("testList",list);
		
		return "test/testList";
	}

	// 단건조회
	@GetMapping("{testNo}")
	public String selectTest(@PathVariable String testNo, Model model) {
		
		log.info("□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□□{}",testNo);
		List<TestVO> list = service.selectTestList(PROFESSOR);
		
		model.addAttribute("detailTestList",list);
		model.addAttribute("detailTest",service.selectTestOne(testNo));
		
		return "test/testDetail";
	}
	// 단건조회 학생용
	@GetMapping("{testNo}/{stuId}")
	public String selectAttendTest() {
		
		return "test/testDetail";
	}

	// form으로 전송 
	//교수가 시험을 만드는 폼으로
	@GetMapping("new")
	public String sendTestForm() {

		return "test/testForm";
	}

	//시험 등록
	@PostMapping
	public String createTest() {
		//진짜 등록하고 보내는
		return "test/testDetail";
	}

	// edit으로 전송 교수가 시험 수정폼으로 이동
	@GetMapping("{testNo}/edit")
	public String sendTestEdit() {

		return "test/testEdit";
	}

	//등록과 반려를 어케해야하지
	
	@PutMapping("{testNo}/{check}")
	public Map<String, Object> checkTest(@PathVariable String testNo , @PathVariable String check) {
		 Map<String, Object> resp = new HashMap<>();
		
		 log.info("시험번호 : {} on? no? : {}" , testNo,check);
		 
		 resp.put("ok", "ok");
		 
		return resp;
		
	}
	
}


























