<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.yguniv.jobboard.dao.JobBoardMapper">

<resultMap type="JobBoardVO" id="boardMap" autoMapping="true">
		<id property="jobNo" column="JOB_NO" jdbcType="VARCHAR"/>
		<result property="atchFileId" column="ATCH_FILE_ID" />
	<association property="atchFile" column="ATCH_FILE_ID"
		select ="kr.or.ddit.yguniv.atch.dao.AtchFileMapper.selectAtchFileEnable"/>
	 <!-- has-many 관계로 여러 EventRegistrant 객체를 가져옴 -->
  	<collection property="eventRegistrants" ofType="EventRegistrantVO"
    column="JOB_NO" />
</resultMap>


<!-- 검색 조건 -->
	<sql id="searchFrag">
		<where>
			JOB_YN='N'
			<if
				test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
				<choose>
					<when
						test="simpleCondition.searchType eq 'title'">
						AND INSTR(JOB_NM, #{simpleCondition.searchWord}) > 0
					</when>
					<when
						test="simpleCondition.searchType eq 'category'">
						AND INSTR(JOB_CATE, #{simpleCondition.searchWord}) > 0
					</when>
					<when
						test="simpleCondition.searchType eq 'content'">
						AND INSTR(JOB_CONTENT, #{simpleCondition.searchWord}) > 0
					</when>
					<otherwise>
						AND (INSTR(JOB_NM, #{simpleCondition.searchWord}) > 0 
						OR INSTR(JOB_CATE, #{simpleCondition.searchWord}) > 0 
						OR INSTR(JOB_CONTENT, #{simpleCondition.searchWord}) > 0)
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>

<!-- 전체 게시글 수 조회 -->
<select id="selectTotalRecord" resultType="int">
		SELECT COUNT(JOB_NO) FROM JOB_BOARD
		<include refid="searchFrag" />
</select>


<!-- 취업정보 게시판 게시글 작성 -->
<insert id="insertJobBoard" parameterType="JobBoardVO">

    <!-- jobNo를 SEQUENCE를 통해 먼저 가져옴 -->
    <selectKey order="BEFORE" resultType="String" keyProperty="jobNo">
        SELECT JOB_BOARD_SEQ.NEXTVAL FROM DUAL
    </selectKey>

    INSERT INTO JOB_BOARD (
         JOB_NO
        ,JOB_NM
        ,JOB_DATE
        ,JOB_CATE
        ,JOB_CNT
        ,JOB_DT
        ,JOB_ET
        ,JOB_LIMIT
        ,ATCH_FILE_ID
        ,JOB_YN
        ,JOB_CONTENT
    ) VALUES (
         #{jobNo, jdbcType=VARCHAR}     <!-- 게시글 번호 -->
        ,#{jobNm, jdbcType=VARCHAR}     <!-- 제목 -->
        ,SYSDATE                       <!-- 작성일 -->
        ,#{jobCate, jdbcType=VARCHAR}   <!-- 카테고리 -->
        ,'0'                           <!-- 조회수 초기값 -->
        ,#{jobDt, jdbcType=DATE}        <!-- 공고 시작일 -->
        ,#{jobEt, jdbcType=DATE}        <!-- 공고 마감일 -->
        ,#{jobLimit, jdbcType=VARCHAR}  <!-- 공고 제한 몇명,OR 제한없음 -->
        ,#{atchFileId, jdbcType=NUMERIC} <!-- 첨부파일 ID -->
        ,'N'                            <!-- 상태 값 (기본값 'N') -->
        ,#{jobContent, jdbcType=VARCHAR}<!-- 내용 -->
    )
</insert>


<!-- 페이징 처리 -->
	<select id="selectJobBoardListPaging" resultType="JobBoardVO">
		SELECT B.*
		FROM(
			SELECT ROWNUM RNUM, A.*
			FROM(
				SELECT
				    JOB_NO
				    ,JOB_NM
				    ,JOB_DATE
				    ,JOB_CATE
				    ,JOB_CNT
				    ,JOB_DT
				    ,JOB_ET
				    ,JOB_LIMIT
				    ,ATCH_FILE_ID
				    ,JOB_YN
				    ,JOB_CONTENT
				FROM JOB_BOARD
	    	<include refid="searchFrag"/>
	    	ORDER BY JOB_NO ASC
	    )A
	  )B
	  <![CDATA[
		WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
	  ]]>
			  
	</select>
	
	
	<select id="selectJobBoard" resultMap="boardMap">
			SELECT
					 JOB_NO
				    ,JOB_NM
				    ,JOB_DATE
				    ,JOB_CATE
				    ,JOB_CNT
				    ,JOB_DT
				    ,JOB_ET
				    ,JOB_LIMIT
				    ,ATCH_FILE_ID
				    ,JOB_YN
				    ,JOB_CONTENT	
		FROM JOB_BOARD
	WHERE JOB_NO = #{jobNo, jdbcType=VARCHAR}
	</select>
	

	 
	<update id="updatejobBoard">
		UPDATE JOB_BOARD
		  SET
		  	  JOB_NM = #{jobNm, jdbcType=VARCHAR}
			  ,JOB_DATE #{jobDate, jdbcType=DATE}
			  ,JOB_CATE_CD #{jobCateCd, jdbcType=VARCHAR}
			  ,JOB_CNT #{jobCnt, jdbcType=NUMERIC}
			  ,JOB_DT #{jobDt, jdbcType=DATE}
			  ,JOB_ET #{jobEt, jdbcType=DATE}
			  ,JOB_LIMIT #{jobLimit, jdbcType=NUMERIC}
			  ,ATCH_FILE_ID #{atchFileId, jdbcType=NUMERIC}
			  ,JOB_YN #{jobYn , jdbcType=VARCHAR}
	WHERE JOB_NO = #{jobNo, jdbcType=VARCHAR}
		  
	
	</update>
	
	<update id="deletejobBoard">
	UPDATE JOB_BOARD
		SET JOB_YN ='Y'
	WHERE JOB_NM = #{jobNm, jdbcType=VARCHAR}
	</update>



</mapper>