document.addEventListener("DOMContentLoaded", function () {
    const statusButtons = document.querySelectorAll(".statusBtn");

    statusButtons.forEach(button => {
        button.addEventListener("click", function () {
            console.log("버튼 클릭됨:", this.textContent);

            const stuId = this.closest("tr").dataset.stuId;
            const currentStatus = getStatusCode(this.textContent.trim());

            fetch(`${contextPath}studentCard/updateStatus?timestamp=${new Date().getTime()}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: new URLSearchParams({
                    cocoCd: currentStatus,
                    stuId: stuId
                }),
                cache: 'no-cache'
            })
            .then(response => {
                if (!response.ok) throw new Error("상태 변경 실패");
                return response.text();
            })
            .then(newStatus => {
                const trimmedStatus = newStatus.trim();
                console.log("서버에서 반환된 상태:", trimmedStatus);

                this.textContent = getStatusName(trimmedStatus);
                console.log("업데이트된 버튼 텍스트:", this.textContent);

                this.className = getButtonClass(trimmedStatus);
                console.log("업데이트된 버튼 클래스:", this.className);

                // DOM 강제 재렌더링
                const parent = this.parentNode;
                const sibling = this.nextSibling;
                parent.removeChild(this);
                parent.insertBefore(this, sibling);

                console.log("DOM 강제 재렌더링 완료");
            })
            .catch(error => {
                console.error("상태 변경 중 오류 발생:", error);
                swal("오류", "상태 변경 중 오류 발생", "warning");
            });
        });
    });

    function getStatusCode(status) {
        switch (status.trim()) {
            case "요청": return "ST01";
            case "발급": return "ST02";
            case "완료": return "ST03";
            default: throw new Error("알 수 없는 상태: " + status);
        }
    }

    function getStatusName(code) {
        console.log("getStatusName에 전달된 코드 원본:", code, "| 길이:", code.length);
        switch (code.trim()) {
            case "ST01": return "요청";
            case "ST02": return "발급";
            case "ST03": return "완료";
            default: return "알 수 없음";
        }
    }

    function getButtonClass(statusCode) {
        console.log("getButtonClass에 전달된 코드:", statusCode);
        switch (statusCode.trim()) {
            case "ST01": return "btn btn-success statusBtn";
            case "ST02": return "btn btn-danger statusBtn";
            case "ST03": return "btn btn-secondary statusBtn";
            default: return "btn btn-warning statusBtn";
        }
    }
});
