<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<body>
<div class="container mt-5">
   <h3 class="text-center">다중 사용자 추가</h3>
   <p class="text-muted text-center">작성 형식을 유의해 업로드 폼을 다운로드하여 작성 후 업로드하세요.</p>

   <!-- 작성 형식 보기와 유의사항 보기 버튼 -->
   <div class="d-flex justify-content-center gap-2 mt-4">
      <button id="toggleFormatBtn" class="btn btn-outline-primary">
         <i class="bi bi-list"></i> 작성 형식 보기
      </button>
      <button id="toggleNoticeBtn" class="btn btn-outline-info">
         <i class="bi bi-info-circle"></i> 유의사항 보기
      </button>
   </div>

   <!-- 데이터 설명 테이블 (숨김 상태로 시작) -->
   <div id="formatSection" style="display: none; margin-top: 20px;">
      <table class="table table-hover table-bordered table-sm" style="width: 80%; margin: 0 auto;">
         <thead class="table-light">
            <tr>
               <th class="text-center">필드 이름</th>
               <th class="text-center"> 설명</th>
               <th class="text-center">필수 여부</th>
            </tr>
         </thead>
         <tbody>
            <tr>
               <td><strong>ID</strong></td>
               <td>학번.사용자 고유 식별자(숫자)</td>
               <td><span class="text-danger"><strong>필수</strong></span></td>
            </tr>
            <tr>
               <td><strong>NM</strong></td>
               <td>사용자 이름</td>
               <td><span class="text-danger"><strong>필수</strong></span></td>
            </tr>
            <tr>
               <td><strong>BRDT</strong></td>
               <td> 사용자 생년월일. <strong>YYYY-MM-DD</strong> 형식.</td>
               <td><span class="text-danger"><strong>필수</strong></span></td>
            </tr>
            <tr>
               <td><strong>SEXDSTN_CD</strong></td>
               <td>성별 코드. <strong>M</strong> 또는 <strong>F</strong> 중 입력.</td>
               <td><span class="text-danger"><strong>필수</strong></span></td>
            </tr>
            <tr>
               <td><strong>GRADE_CD</strong></td>
               <td>학년 코드. 시스템에서 제공되는 학년 코드 사용.</td>
               <td><span class="text-danger"><strong>필수</strong></span></td>
            </tr>
            <tr>
               <td><strong>STRE_CATE_CD</strong></td>
               <td>학적 상태 코드. 시스템에서 제공된 학적 상태 코드 입력.</td>
               <td><span class="text-danger"><strong>필수</strong></span></td>
            </tr>
            <tr>
               <td><strong>DEPT_CD</strong></td>
               <td>학과 코드. 시스템에서 제공된 학과 코드 입력.</td>
               <td><span class="text-danger"><strong>필수</strong></span></td>
            </tr>
         </tbody>
      </table>
   </div>

   <!-- 유의사항 숨김 영역 -->
   <div id="noticeSection" class="alert alert-primary mt-4" role="alert" style="width: 80%; margin: 0 auto; display: none;">
      <h5><i class="bi bi-info-circle-fill"></i> 작성 시 유의사항</h5>
      <ul>
         <li>모든 <span class="text-danger"><strong>필수 항목</strong></span>을 빠짐없이 작성해야 합니다.</li>
         <li>생년월일은 반드시 <strong>YYYY-MM-DD</strong> 형식으로 입력해야 합니다.</li>
         <li>성별 코드는 <strong>M</strong> 또는 <strong>F</strong> 중 하나를 선택하세요.</li>
         <li>학적 상태 및 학과 코드는 시스템에서 제공된 값을 정확히 입력해야 합니다.</li>
         <li>입력 항목이 올바르지 않으면 업로드에 실패할 수 있습니다.</li>
      </ul>
   </div>

   <!-- 업로드 폼 다운로드 -->
   <div class="text-center mt-4">
      <a href="${pageContext.request.contextPath}/person/templateDownload" class="btn btn-primary">
         <i class="bi bi-download"></i> 작성 업로드 폼 다운로드
      </a>
   </div>

   <!-- 파일 업로드 폼 -->
   <form id="bulkUploadForm" action="${pageContext.request.contextPath }/person/bulkUpload" method="post" enctype="multipart/form-data" style="width: 80%; margin: 20px auto;">
      <div class="mb-3">
         <label for="file" class="form-label"><strong>다중사용자 파일 업로드</strong></label>
         <input type="file" class="form-control" id="file" name="file" accept=".xls, .xlsx, .ods" required>
      </div>
      <div class="text-center">
         <button type="submit" class="btn btn-success">
            <i class="bi bi-upload"></i> 업로드
         </button>
      </div>
   </form>

   <!-- 업로드 상태 메시지 -->
   <div id="uploadResult" style="margin-top: 20px; width: 80%; margin: 0 auto;">
      <!-- 업로드 성공/실패 메시지가 여기 출력됩니다. -->
   </div>
</div>
<input type="hidden" id="cp" value="${pageContext.request.contextPath }">
<script>
   // 작성 형식 보기 버튼 클릭 이벤트
   document.getElementById("toggleFormatBtn").addEventListener("click", function () {
      const formatSection = document.getElementById("formatSection");
      if (formatSection.style.display === "none") {
         formatSection.style.display = "block"; // 보이기
         this.innerHTML = '<i class="bi bi-list"></i> 작성 형식 숨기기';
      } else {
         formatSection.style.display = "none"; // 숨기기
         this.innerHTML = '<i class="bi bi-list"></i> 작성 형식 보기';
      }
   });

   // 유의사항 보기 버튼 클릭 이벤트
   document.getElementById("toggleNoticeBtn").addEventListener("click", function () {
      const noticeSection = document.getElementById("noticeSection");
      if (noticeSection.style.display === "none") {
         noticeSection.style.display = "block"; // 보이기
         this.innerHTML = '<i class="bi bi-info-circle"></i> 유의사항 숨기기';
      } else {
         noticeSection.style.display = "none"; // 숨기기
         this.innerHTML = '<i class="bi bi-info-circle"></i> 유의사항 보기';
      }
   });
   
   document.getElementById("bulkUploadForm").onsubmit = async function (event) {
	    event.preventDefault();
	    const cp = document.querySelector('#cp').value;

	    try {
	        const formData = new FormData(this);

	        // 첫 번째 fetch 요청
	        const response = await fetch(this.action, {
	            method: "POST",
	            body: formData,
	        });

	        const data = await response.json();
	       // console.log("전체 데이터:", data);

	        if (data.success) {
	            swal({
	                title: "등록 전 사용자 정보를 검토해주세요",
	                text: data.message,
	                icon: "info",
	                buttons: ["취소", "저장"],
	            }).then(async (userConfirmed) => {
	                if (userConfirmed) {
	                    // 두 번째 fetch 요청
	                    const confirmFormData = new FormData();
	                    confirmFormData.append("file", formData.get("file"));

	                    const confirmResponse = await fetch(cp + '/person/confirmUpload', {
	                        method: 'POST',
	                        body: confirmFormData,
	                    });

	                    const confirmData = await confirmResponse.json();
	                    if (confirmData.success) {
	                        swal({
	                            title: "저장 완료!",
	                            text: confirmData.message,
	                            icon: "success",
	                            buttons:  "확인",
	                        }).then(()=>{
		                        location.href=cp+'/person/list';
	                        });
	                    } else {
	                        swal({
	                            title: "저장 실패",
	                            text: confirmData.message,
	                            icon: "error",
	                        });
	                    }
	                }
	            });
	        } else {
	            swal({
	                title: "오류 발생",
	                text: data.message,
	                icon: "error",
	            });
	        }
	    } catch (error) {
	        console.error('요청 처리 중 오류:', error);
	        swal({
	            title: "오류 발생",
	            text: "요청 처리 중 문제가 발생했습니다. 관리자에게 문의하세요.",
	            icon: "error",
	        });
	    }
	};

</script>



</body>
