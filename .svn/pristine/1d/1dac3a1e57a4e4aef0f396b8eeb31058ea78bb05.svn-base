package kr.or.ddit.yguniv.board.systemBoard.service;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.annotation.PostConstruct;
import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.Resource;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import kr.or.ddit.yguniv.atch.service.AtchFileService;
import kr.or.ddit.yguniv.board.systemBoard.dao.SystemBoardMapper;
import kr.or.ddit.yguniv.enumpkg.ServiceResult;
import kr.or.ddit.yguniv.paging.PaginationInfo;
import kr.or.ddit.yguniv.vo.SystemNoticeBoardVO;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class SystemBoardServiceImpl implements SystemBoardService {

	private final SystemBoardMapper mapper;
	private final AtchFileService atchFileService;

	@Inject
	private final PasswordEncoder encoder;

	@Value("#{dirInfo.saveDir}")
	private Resource saveFolderRes;
	private File saveFolder;

	@PostConstruct
	public void init() throws IOException {
		this.saveFolder = saveFolderRes.getFile();
	}

	@Override
	public ServiceResult insertSystemBoard(final SystemNoticeBoardVO systemNoticeBoard) {
		if (mapper.insertSystemBoard(systemNoticeBoard) > 0) {
			return ServiceResult.OK;

		} else {
			return ServiceResult.FAIL;
		}
	}

	@Override
	public List<SystemNoticeBoardVO> selectList(PaginationInfo<SystemNoticeBoardVO> paginationInfo) {

		if (paginationInfo != null) {
			int totalRecord = mapper.selectTotalRecord(paginationInfo);
			paginationInfo.setTotalRecord(totalRecord);
		}
		return mapper.selectList(paginationInfo);

	}

//	@Override
//	public int selectTotalRecord(PaginationInfo<SystemNoticeBoardVO> paginationInfo) {
//		// TODO Auto-generated method stub
//		return 0;
//	}

	@Override
	public SystemNoticeBoardVO selectSystemBoard(String snbNo) {
		SystemNoticeBoardVO system = mapper.selectSystemBoard(snbNo);
		if (system == null) {
			String.format("%s 게시글 없음", snbNo);
		}
		return system;
	}

	@Override
	public ServiceResult updateSystemBoard(SystemNoticeBoardVO systemNoticeBoard) {
		if (mapper.updateSystemBoard(systemNoticeBoard) > 0) {
			return ServiceResult.OK;
		} else {
			return ServiceResult.FAIL;
		}
	}

	@Override
	public ServiceResult deleteSystemBoard(String snbNo) {

		if (mapper.deleteSystemBoard(snbNo) > 0) {
			return ServiceResult.OK;
		} else {

			return ServiceResult.FAIL;

		}

	}

	@Override
	public List<SystemNoticeBoardVO> selectSystemNoticeBoardList(PaginationInfo paginationInfo) {

		if(paginationInfo != null) {
			
			int totalRecord = mapper.selectTotalRecord(paginationInfo);
			paginationInfo.setTotalRecord(totalRecord);
		}
		
		return mapper.selectList(paginationInfo); //실제 데이터 조회
	}

}
