package kr.or.ddit.yguniv.vo;

import java.io.Serializable;
import java.time.LocalDateTime;
//학색증
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import javax.validation.Valid;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.format.annotation.DateTimeFormat.ISO;
import org.springframework.lang.Nullable;
import org.springframework.web.multipart.MultipartFile;

import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;

@Data
@ToString
@EqualsAndHashCode(of = "stuId" )
public class StudentCardVO implements Serializable{
	
	private int rnum;
	
	@NotBlank
	@Size(min = 10, max = 10)
	private transient String stuId; // 학생번호
	
	@DateTimeFormat(iso = ISO.DATE_TIME)
	private LocalDateTime stuCardDate; // 요청일시 
	
	@Size(max = 10)
	@NotBlank
	private String  cocoCd; // 발급상태코드 
	
	
	@Nullable
	private Integer atchFileId; // 파일그룹번호
	
			
			@JsonIgnore
			@ToString.Exclude
			@Nullable
			@Valid
			private AtchFileVO atchFile;
			
			@JsonIgnore
			@ToString.Exclude
			private MultipartFile[] uploadFiles;
			public void setUploadFiles(MultipartFile[] uploadFiles) {
				List<AtchFileDetailVO> fileDetails = Optional.ofNullable(uploadFiles)
															.map(Arrays::stream)
															.orElse(Stream.empty())
															.filter(f->!f.isEmpty())	
															.map(AtchFileDetailVO::new)
															.collect(Collectors.toList());
				if(!fileDetails.isEmpty()) {
					this.uploadFiles = uploadFiles;
					atchFile = new AtchFileVO();
					atchFile.setFileDetails(fileDetails);
				}
		
			}

	

	// 학생 테이블 
	@ToString.Exclude
	private StudentVO studentVO;
	
	private CommonCodeVO commonCodeVO; // 공통코드

	
	

}
