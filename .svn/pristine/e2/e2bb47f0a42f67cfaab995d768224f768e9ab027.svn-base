<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.yguniv.person.dao.PersonMapper">
	
<resultMap type="PersonVO" id="personMap" autoMapping="true">

  <collection property="student" ofType="StudentVO"
    column="STU_ID" />
  <collection property="professor" ofType="ProfessorVO"
    column="PROFE_ID" />
  <collection property="employee" ofType="EmployeeVO"
    column="EMP_ID" />
 
</resultMap>
	
<insert id="insertPerson" parameterType="PersonVO">
    <!-- Person 삽입 -->
    INSERT INTO PERSON(
        ID,
        PSWD,
        NM,
        BRDT,
        SEXDSTN_CD,
        ZIP,
        RDNMADR,
        DADDR,
        MBTLNUM,
        EML,
        EML_RCPTN_AGRE_YN,
        SMS_RCPTN_AGRE_YN,
        CRTFC_MN_CD,
        LAST_CONECT_DE,
        PSWD_FAILR_CO,
        PROFL_PHOTO,
        PERSON_YN
    ) VALUES (
        #{id, jdbcType=VARCHAR},
        #{pswd, jdbcType=VARCHAR},
        #{nm, jdbcType=VARCHAR},
        #{brdt, jdbcType=CHAR},
        #{sexdstnCd, jdbcType=CHAR},
        #{zip, jdbcType=CHAR},
        #{rdnmadr, jdbcType=VARCHAR},
        #{daddr, jdbcType=VARCHAR},
        #{mbtlnum, jdbcType=VARCHAR},
        #{eml, jdbcType=VARCHAR},
        #{emlRcptnAgreYn, jdbcType=CHAR},
        #{smsRcptnAgreYn, jdbcType=CHAR},
        #{crtfcMnCd, jdbcType=CHAR},
        TO_CHAR(SYSDATE, 'YYYYMMDD'),
        '0',
        <!-- 프로필 사진이 null이면 NULL 값으로 처리 -->
        <if test="proflPhoto != null">
            #{proflPhoto, jdbcType=BLOB}
        </if>
        <if test="proflPhoto == null">
            NULL
        </if>,
        'N'
    )

</insert>

<insert id="insertEmployee" parameterType="EmployeeVO">
	INSERT INTO EMPLOYEE(
		EMP_ID,
		EMP_DEPT,
		EMP_JBGD
	)
	VALUES(
		#{empId, jdbcType=VARCHAR}, 
		#{empDept, jdbcType=VARCHAR},
		#{empJbgd, jdbcType=VARCHAR}
	)
</insert>
	
<insert id="insertProfessor" parameterType="ProfessorVO">
    INSERT INTO PROFESSOR (
        PROFE_ID, 
        DEPT_NO, 
        PROFE_TYPE
    )
    VALUES (
        #{profeId, jdbcType=VARCHAR},
        #{deptNo, jdbcType=VARCHAR},
        #{profeType, jdbcType=VARCHAR}
    )
</insert>

	
	
<!-- 	<insert id="insertPerson" parameterType="PersonVO"> -->
<!-- 	INSERT INTO PERSON( -->
<!-- 		 ID -->
<!-- 		 ,PSWD -->
<!-- 		 ,NM -->
<!-- 		 ,BRDT -->
<!-- 		 ,SEXDSTN_CD -->
<!-- 		 ,ZIP -->
<!-- 		 ,RDNMADR -->
<!-- 		 ,DADDR -->
<!-- 		 ,MBTLNUM -->
<!-- 		 ,EML -->
<!-- 		 ,EML_RCPTN_AGRE_YN -->
<!-- 		 ,SMS_RCPTN_AGRE_YN -->
<!-- 		 ,CRTFC_MN_CD -->
<!-- 		 ,LAST_CONECT_DE -->
<!-- 		 ,PSWD_FAILR_CO -->
<!-- 		 ,PROFL_PHOTO -->
<!-- 		 ,PERSON_YN -->
		
<!-- 		) -->
<!-- VALUES( -->
<!-- 		 #{id, jdbcType=VARCHAR} -->
<!-- 		, #{pswd, jdbcType=VARCHAR} -->
<!-- 		, #{nm, jdbcType=VARCHAR} -->
<!-- 		, #{brdt, jdbcType=CHAR} -->
<!-- 		, #{sexdstnCd, jdbcType=CHAR} -->
<!-- 		, #{zip, jdbcType=CHAR} -->
<!-- 		, #{rdnmadr, jdbcType=VARCHAR} -->
<!-- 		, #{daddr, jdbcType=VARCHAR} -->
<!-- 		, #{mbtlnum, jdbcType=VARCHAR} -->
<!-- 		, #{eml, jdbcType=VARCHAR} -->
<!-- 		, #{emlRcptnAgreYn, jdbcType=CHAR} -->
<!-- 		, #{smsRcptnAgreYn, jdbcType=CHAR} -->
<!-- 		, #{crtfcMnCd, jdbcType=CHAR} -->
<!-- 		, (SELECT TO_DATE(SYSDATE, 'YYYY-MM-DD') FROM DUAL) -->
<!-- 		, '0' -->
<!-- 		, #{proflPhoto, jdbcType=BLOB} -->
<!-- 		,'N' -->
<!-- 		) -->
<!-- 	</insert> -->
	<select id="selectPerson" resultMap="personMap">
    SELECT 
        ID,
        NM,
        BRDT,
        SEXDSTN_CD,
        ZIP,
        RDNMADR,
        DADDR,
        MBTLNUM,
        EML,
        EML_RCPTN_AGRE_YN,
        SMS_RCPTN_AGRE_YN,
        CRTFC_MN_CD,
        LAST_CONECT_DE,
        PSWD_FAILR_CO,
        PROFL_PHOTO,
        PERSON_YN,
        CASE 
            WHEN SUBSTR(ID, 5, 1) = '1' THEN '교수'
            WHEN SUBSTR(ID, 5, 1) = '2' THEN '교직원'
            WHEN SUBSTR(ID, 5, 1) = '3' THEN '학생'
            ELSE '알 수 없음'
        END AS PERSON_TYPE
    FROM PERSON
    WHERE ID = #{id, jdbcType=VARCHAR}
</select>

	
<!-- 	사용자 리스트 조회 -->
<select id="selectPersonList" resultType="PersonVO">

    SELECT 
        ID,
        NM,
        BRDT,
        SEXDSTN_CD,
        ZIP,
        RDNMADR,
        DADDR,
        MBTLNUM,
        EML,
        EML_RCPTN_AGRE_YN,
        SMS_RCPTN_AGRE_YN,
        CRTFC_MN_CD,
        LAST_CONECT_DE,
        PSWD_FAILR_CO,
        PROFL_PHOTO,
        PERSON_YN,
        CASE 
            WHEN SUBSTR(ID, 5, 1) = '1' THEN '교수'
            WHEN SUBSTR(ID, 5, 1) = '2' THEN '교직원'
            WHEN SUBSTR(ID, 5, 1) = '3' THEN '학생'
            ELSE '알 수 없음'
        END AS PERSON_TYPE
    FROM PERSON
</select>


	
	<update id="updatePerson">
    UPDATE PERSON
    SET PSWD_FAILR_CO = #{pswdFailrCo, jdbcType=NUMERIC}
    WHERE ID = #{id, jdbcType=VARCHAR}
</update>



	<select id="selectProfessorDetail" resultMap="personMap">
    SELECT 
        PROFE_ID,
        DEPT_NO,
        PROFE_TYPE
    FROM PROFESSOR
    WHERE ID = #{id}
</select>

<select id="selectEmployeeDetail" resultMap="personMap">
    SELECT 
        ID,
        DEPARTMENT,
        JOB_TITLE
    FROM STAFF
    WHERE ID = #{id}
</select>

<select id="selectStudentDetail" resultMap="personMap">
    SELECT 
        ID,
        MAJOR,
        GRADE
    FROM STUDENT
    WHERE ID = #{id}
</select>
	
		
	
	<delete id="deletePerson">
		UPDATE PERSON
		SET
			PERSON_YN ='Y'
		WHERE ID=#{id}
	</delete>
	

</mapper>