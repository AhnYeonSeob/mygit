package kr.or.ddit.yguniv.attendcoeva.controller;

import java.security.Principal;
import java.util.HashMap;
import java.util.Map;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.yguniv.attendcoeva.service.AttendCoevaService;
import kr.or.ddit.yguniv.security.conf.PersonVoWrapper;
import kr.or.ddit.yguniv.vo.PersonVO;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/attendCoeva")
@RequiredArgsConstructor
public class AttendCoevaController {

	private final AttendCoevaService service;
	
	//강의 평가 목록 조회
	//[학,교수]강의평가 페이지로 이동한다.
		@GetMapping()
		public String getPage(Principal prin,Model  model
				,Authentication authentication) {
			log.debug("{}",authentication.getPrincipal());
			PersonVoWrapper pVw = (PersonVoWrapper) authentication.getPrincipal();
			PersonVO pVo = pVw.getRealUser();
			
			//이동하면서 기록이 남아있는 학기만 가져감.
			if("STUDENT".equals(pVo.getPersonType())) {
//				현재 로그인한 사용자가 학생일 경우
				model.addAttribute("coevaList",service.selectAttenSemesterList(prin.getName()));
			}else {
				//교수의 경우
				model.addAttribute("coevaList",service.selectProfeSemesterList(prin.getName()));
			}
			
			model.addAttribute("id", prin.getName());
//			/Team01Project/src/main/webapp/WEB-INF/views/attendcoeva/attendCoevaList.jsp
			return "attendcoeva/attendCoevaList";
			
		}
		
		@GetMapping("{stuId}")
		@ResponseBody
		public Map<String,Object> selectSemesterList(@PathVariable String stuId ,Model  model) {
			
			Map<String,Object> map = new HashMap<>();
//			map.put("semList",service.selectSemesterList(stuId));
			
			return map;
			
		}
		
		@GetMapping("{stuId}/{semNo}")
		public String selectList(@PathVariable String stuId ,@PathVariable String semNo ,Model  model) {
			
//			service.selectSemesterList(stuId);
			service.selectCoevaList(stuId, semNo);
			
			
			return "attendcoeva/attendCoevaList";
			
		}
	
		
		//강의 평가 수정 (등록)
		//수강생이 강의평가를 등록한다
		@PostMapping()
		public String updateAttend() {
			//업데이트 로직
			return "attendCoeva/attendCoevaList";
		}
		
		//강의 평가 상세 조회
		//수강생이 평가를 작성할 강의평가 UI를 출력한다
		//평가 작성 페이지에서 [작성]을  클릭하면 싱글페이지로 출력되도록
		//그럼 이건 필요없는거아닌가
//		@GetMapping()
//		public String selectOne() {
//			
//			return "attendCoeva/attendCoevaDetail";
//		}

		
		
		//교수 혹은 교직원이 강의에 등록된 강의평가 조회
		//무기명
//		@GetMapping("professor/{courNo}")
//		public String ProfeesorSelectOne() {
//			
//			return "attendCoeva/attendCoevaList";
//		}
		
		/*
		 * dissent test question 
		 * 
		 * */
		
		
}
